---
layout: post
title:  "讓孩子透過 Code.org 學習程式語言！"
date:   2017-09-08 01:21:02 +0800
categories: code.org
---
<iframe width="560" height="315" src="https://www.youtube.com/embed/nKIu9yen5nc" frameborder="0" allowfullscreen></iframe>
這是非營利組織 [Code.org](http://code.org) 在美國揭幕時，由微軟總裁比爾 · 蓋茲（Bill Gates）、 臉書創辦人馬克 · 佐伯克和（Mark Zuckerberg）和NBA 明星球員克里斯 · 波許（Chris Bosh）代言的揭幕影片。兩年後前美國總統歐巴馬也錄製一段<a href="https://youtu.be/apB7IUOzaAM" target="blank">影片</a>鼓勵美國的學子們學習程式語言，透過邏輯思維動手解決問題。

Code.org
---
[Code.org](http://code.org) 是一個網站也是一個非盈利性組織，其宗旨是讓全世界各地的學齡（前）兒童，透過關卡遊戲學習計算機科學。可能僅是簡單的拖曳方塊、或點擊鍵盤等行為跟電腦遊戲溝通。而這些遊戲關卡，往往出自於各式各樣生活中可能會遭遇到的問題。這些**關卡**被依照年齡精心的設計過，

#### 註冊一個學習帳號
您應該要註冊一個學習帳號，登入後系統會記住您所學習的每一門課程。
![Alt text](/img/2017-09-08-code-with-kid-3.png)

#### 年齡 4-6 歲：
這個階段的課程為了學齡前的兒童所設計。適合的年齡為 4 歲到 6 歲，6 歲以上的關卡，可能需要具備簡單的閱讀能力。每個課程內有將近 20 堂課。每一堂課程皆是計算機科學或程式語言中的經典問題，例如：序列、迴圈、遞迴，與除錯（debug）技巧。

![Alt text](/img/2017-09-08-code-with-kid-0.png)

學齡前兒童的課程重點在於拆卸與重組問題的能力，例如其中的經典關卡「序列（Sequence）」，
學生必須透過拼圖遊戲，幫助小蜜蜂採集足夠的花朵後，回到蜂巢裡釀造蜂蜜。而**序列**是一個有趣的數學議題，**序列**的定義是什麼？**序列**的定義就是被排成一列的「事件（event）」，就如同小蜜蜂採集花蜜回蜂巢的任務一樣。而**序列**的內容是由一個一個有順序性的「元素（element）」構成，而這些元素便是採蜜遊戲上的「飛行方向」、「採集花蜜」以及「釀造蜂蜜」。這個遊戲有趣的地方在於，不同的元素排列組合，理應會產生不同的結果。但只存在一種元素組合，也就是唯一的**序列**，能夠經由最短路徑達成蜜蜂的採蜜工作。

![Alt text](/img/2017-09-08-code-with-kid-1.png)

#### 年齡 8-18 歲：
學生將更深入的理解前面所學的程式邏輯，並且善用已經學會的程式技巧，設計自己的遊戲關卡。學生在設計遊戲關卡的時候，得先基於之前所學的計算績學基礎，僅可能的描述一個問題。並嘗試思索自己設計的問題，將一個模糊且籠統的問題歸納成為若干個議題（issue），最後試圖分析、著手解決這些議題。

![Alt text](/img/2017-09-08-code-with-kid-4.png)

以基於聖經的第一卷書「創世紀」為發想設計的遊戲關卡「創世神（Minecraft）」為例，**創世神**是很典型的業界遊戲設計基本流程。一個遊戲的誕生，源自於一段基於時間、空間與事件完美搭配的腳本。時間的意思就是時間軸（timeline），代表在遊戲中一段又一段的分鏡。空間，指的就是場景（sense），場景是你故事中的主角們發生關係的載體，而在場景中的任意時間軸點上發生的不同事件，就是遊戲腳本（script）的基本精神。例如在創世紀裡，場景是地球，時間（t=0）的點上，神說，要有光、 就有了光！神稱光爲晝、稱暗爲夜！於是在地球上就產生了日與夜。神用泥土塑造了萬物，所以場景上變多了許多事件。管理這些萬物的最佳方法就是收斂這些物種個各式各樣需求，分析他們，解決他們。例如第 3 關卡裡，創世神創造了一隻綿羊，綿羊需要活動，綿羊需要理毛，重複無限多次，綿羊過得汲汲營營，才不會有時間去思考哲學議題，而這樣對綿羊們比較好。 :P

![Alt text](/img/2017-09-08-code-with-kid-5.png)

#### 關於課程的思考：
我認為教導孩子們計算機科學或程式語言，並不是基於一種學才藝的心態。事實上，計算機科學的領域進展太快了，孩子們現在學了任何一種程式語言都不保證終身受用。那麼課程的目的到底是什麼呢？我們都知道計算機科學背後的理論就是哲學、數學以及工程學，哲學教導我們質疑萬物，倘若一個孩子質疑 1+1=2，那他就是哲學家！數學以及工程學協助我們分析這些問題與並且證明、實現我們針對這些問題所預想的解答。答案呼之欲出，我們希望孩子能夠經由計算機科學為起點，嘗試跟自己對話，也跟這個世界對話。

課程進展
---
目前在美國已經有超過 70 所學校與 [Code.org](http://code.org) 合作設計算機科學課程。這些學校也接受的專業培訓和指導，培育出專業的教師，涵蓋了小學、中學、高中三個階段，覆蓋幾百萬的學生。截至目前為止約有 60 多萬名教師使用 [Code.org](http://code.org) 網站作為計算機科學教材，並且有超過兩千萬名學生。

延伸閱讀
---
##### [為每個學生設計的一小時程式設計課程 -- 已有 436,530,544 個學生參加](https://hourofcode.com/us/zh)
##### [Code.org中文教材 - 一小時玩程式(Hour of Code™ in Taiwan)](http://hocintw.thealliance.org.tw/codeorg20013259912594526448.html)
